
Count Subarrays with XOR as k

arr[] = [4, 2, 2, 6, 4], k = 6

below subarrays will gives xor as 6
{4, 2}  4 ^ 2 = 6
{6}
{2, 2, 6}   2 ^ 2 ^ 6 = 6
{4, 2, 2, 6, 4} = 4 ^ 2 ^ 2 ^ 6 ^ 4 = 6

First SOlution => Brute Force Approach

arr[] = [4  2   2   6   4], k = 6

Generate all the sub arrays
for(i = 0; i < n; i++) {
    for(j = i; j < n; j++) {
        xor = 0;
        //consider sub array from i -> j
        for(l = i; l < j; l++) {
            xor = xor ^ arr[l];
        }
        if(xor == k) cnt++;
    }
}

Time complexity => near about n^3
Space Complexity => O(1)
=================================================================================
Optimise it more
Better SOlution

arr[] = [4  2   2   6   4], k = 6

Generate all the sub arrays
for(i = 0; i < n; i++) {
    xor = 0;
    for(j = i; j < n; j++) {
        //no need of 3rd loop we can calculate xor here only
        xor = xor ^ arr[j];
        if(xor == k) cnt++;
    }
}

Here we reduce time complexity to O(n^2)
SPace Complexity O(1)
======================================================================================
Optimal SOlution:

Approach:
The steps are as follows:

First, we will declare a map to store the prefix XORs and their counts.
Then, we will set the value of 0 as 1 on the map.
Then we will run a loop(say i) from index 0 to n-1(n = size of the array).
For each index i, we will do the following:
We will XOR the current element i.e. arr[i] to the existing prefix XOR.
Then we will calculate the prefix XOR i.e. xr^k, for which we need the occurrence.
We will add the occurrence of the prefix XOR xr^k i.e. mpp[xr^k] to our answer.
Then we will store the current prefix XOR, xr in the map increasing its occurrence by 1.

Question: Why do we need to set the value of 0 beforehand?
Letâ€™s understand this using an example. Assume the given array is [3, 3, 1, 1, 1] 
and k is 3. Now, for index 0, we get the total prefix XOR as 3, and k is also 3. 
So, the prefix XOR xr^k will be = 3^3 = 0. Now, if the value is not previously set for 
the key 0 in the map, we will get the default value 0 and we will add 0 to our answer. 
This will mean that we have not found any subarray with XOR 3 till now. But this should 
not be the case as index 0 itself is a subarray with XOR k i.e. 3.
So, in order to avoid this situation we need to set the value of 0 as 1 on the map 
beforehand.